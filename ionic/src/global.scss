// http://ionicframework.com/docs/theming/
@import '~@ionic/angular/css/core.css';
@import '~@ionic/angular/css/normalize.css';
@import '~@ionic/angular/css/structure.css';
@import '~@ionic/angular/css/typography.css';

@import '~@ionic/angular/css/padding.css';
@import '~@ionic/angular/css/float-elements.css';
@import '~@ionic/angular/css/text-alignment.css';
@import '~@ionic/angular/css/text-transformation.css';
@import '~@ionic/angular/css/flex-utils.css';


/*ion-item {
    --ion-item-background: transparent;
}*/
  @mixin breakpoint($mq01: 0, $mq2: false, $maxmin: max-width) {
    @if $mq2 == false {
        @media ($maxmin: $mq01) {
            @content;
        }
    }
    @else {
        @media (min-width: $mq01) and (max-width: $mq2) {
            @content;
        }
    }
  }
  
  // breakpoint variables
  $lg: 1170px;
  $md: 1024px;
  $sm: 640px;
  $xs: 480px;
  
  // responsive font size mixin
  @mixin font-size-map($font-size-map) {
      @each $breakpoint, $font-size in $font-size-map {
          @if $breakpoint == null {
              font-size: $font-size;
          } @else {
              @include breakpoint($breakpoint) {
                  font-size: $font-size;
              }
          }
      }
  }
  
  // font sizes
  
  $html-font-size: (null: 16px, $md: 15px, $sm: 14px, $xs: 13px);
  $paragraph-font-size: (null: 18px, $lg: 17px, $md: 16px, $sm: 15px, $xs: 14px);

html {
  @include font-size-map($html-font-size);
}

p {
  @include font-size-map($paragraph-font-size);
}

$screen-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@each $keySize, $valueSize in $screen-breakpoints {
    [hidden-#{$keySize}] {
        @media (min-width: $valueSize) {
            display: none;
        }
    }
}


@each $keySize, $valueSize in $screen-breakpoints {
    [visible-block-#{$keySize}] {
        @media (min-width: $valueSize) {
            display: block;
        }
    }
}

@each $keySize, $valueSize in $screen-breakpoints {
    [visible-inline-block-#{$keySize}] {
        @media (min-width: $valueSize) {
            display: inline-block;
        }
    }
}

.smlogo {
  width: 60px;
  height: 60px;
  border-radius: 10%;
  background: url("/assets/icon/logo.png") no-repeat;
  background-size: 100%;
}

ion-card{
  border-radius: 30px !important;
  border-color: black !important;
}

// backgrounds //
.bg-white {
  background-color: #fff;
}
  
  .bg-light {
    background-color: var(--ion-color-light);
  }
  
  .bg-dark {
      background-color: var(--ion-color-dark);
  }
  
  .bg-primary {
      background-color: var(--ion-color-primary);
  }
  
  .bg-secondary {
      background-color: var(--ion-color-secondary);
  }
  
  .bg-tertiary {
      background-color: var(--ion-color-tertiary);
  }
  
  .bg-profile {
    background-image: linear-gradient(135deg, var(--ion-color-dark), var(--ion-color-primary))
  }
  
  .bg-main {
      background-image: linear-gradient(-135deg, var(--ion-color-medium), var(--ion-color-light))
  }
  
  // Helpers //
  .w100 {
    width: 100%;
  }
  
  .bold,
  .fw500 {
      font-weight: 500 !important;
  }
  
  .fw1000 {
      font-weight: 1000 !important;
  }
  
  .text08 {
    font-size: .8rem;
  }
  
  .text1 {
    font-size: 1rem !important;
  }

  .text12 {
    font-size: 1.2rem;
  }

  .text15 {
    font-size: 1.5rem;
  }
  
  .text20 {
    font-size: 2rem;
  }
  
  /*.text-white {
      color: #fff;
  }
  
  .text-primary {
      color: var(--ion-color-primary);
  }

  .text-secondary {
    color: var(--ion-color-secondary);
}
  
  .text-dark {
    color: var(--ion-color-dark);
  }*/
  
  // menu //
  // Menu user profile
  ion-toolbar.user-profile {
  
    .user-avatar {
      width: 68px;
      height: 68px;
    }
    .item-inner {
      border-width: 0;
    }
  }
 
 
  // style for auth pages
  .auth-page {
    background-image: linear-gradient(135deg, var(--ion-color-dark), var(--ion-color-primary));
  
    .grid {
      padding: 0;
      .col {
        padding: 0;
      }
    }
  
    .btn-group {
      .button-ios,
      .button-md {
        border-radius: 0;
        &:first-of-type {
          border-radius: 2px 0 0 2px;
        }
        &:last-of-type {
          border-radius: 0 2px 2px 0;
        }
      }
    }
  
    .auth-content {
      margin: 0 5%;
  
      .logo {
        width: 100px;
        height: 100px;
        margin: 20px auto 8px;
        border-radius: 10%;
        background: url("/assets/icon/logo.png") no-repeat;
        background-size: 100%;
      }
  
      .list-form {
        padding: 0;
        margin-bottom: 0;
  
        ion-item {
          background: none;
          padding: 0;
  
          &:first-child {
            border-top: none;
          }
  
          &:after {
            display: none;
          }
  
          ion-label {
            font-size: 1em;
            color: var(--ion-color-light);
          }
  
          input {
            color: var(--ion-color-light);
          }
        }
      }
    }
  
  }
  
  // Custom Menu styles (overriding Shadow DOM)
 
  
  .mto {
    margin-top: 12px;
    ion-icon {
      margin-bottom: -2px;
    }
  }